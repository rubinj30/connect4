// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BoardSelect should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BoardSelect
    opts={
      Array [
        7,
        8,
        9,
      ]
    }
    updateBoardSize={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span>
          # of Columns: 
        </span>,
        <select
          className="w4 h2 ma2"
          onChange={[MockFunction]}
        >
          <option
            value={7}
          >
            7
          </option>
          <option
            value={8}
          >
            8
          </option>
          <option
            value={9}
          >
            9
          </option>
        </select>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "# of Columns: ",
        },
        "ref": null,
        "rendered": "# of Columns: ",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value={7}
            >
              7
            </option>,
            <option
              value={8}
            >
              8
            </option>,
            <option
              value={9}
            >
              9
            </option>,
          ],
          "className": "w4 h2 ma2",
          "onChange": [MockFunction],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "7",
            "nodeType": "host",
            "props": Object {
              "children": 7,
              "value": 7,
            },
            "ref": null,
            "rendered": 7,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "8",
            "nodeType": "host",
            "props": Object {
              "children": 8,
              "value": 8,
            },
            "ref": null,
            "rendered": 8,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "9",
            "nodeType": "host",
            "props": Object {
              "children": 9,
              "value": 9,
            },
            "ref": null,
            "rendered": 9,
            "type": "option",
          },
        ],
        "type": "select",
      },
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            # of Columns: 
          </span>,
          <select
            className="w4 h2 ma2"
            onChange={[MockFunction]}
          >
            <option
              value={7}
            >
              7
            </option>
            <option
              value={8}
            >
              8
            </option>
            <option
              value={9}
            >
              9
            </option>
          </select>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "# of Columns: ",
          },
          "ref": null,
          "rendered": "# of Columns: ",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value={7}
              >
                7
              </option>,
              <option
                value={8}
              >
                8
              </option>,
              <option
                value={9}
              >
                9
              </option>,
            ],
            "className": "w4 h2 ma2",
            "onChange": [MockFunction],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "7",
              "nodeType": "host",
              "props": Object {
                "children": 7,
                "value": 7,
              },
              "ref": null,
              "rendered": 7,
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "8",
              "nodeType": "host",
              "props": Object {
                "children": 8,
                "value": 8,
              },
              "ref": null,
              "rendered": 8,
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "9",
              "nodeType": "host",
              "props": Object {
                "children": 9,
                "value": 9,
              },
              "ref": null,
              "rendered": 9,
              "type": "option",
            },
          ],
          "type": "select",
        },
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
