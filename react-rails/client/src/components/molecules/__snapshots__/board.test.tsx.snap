// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board should render properly when blank 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Board
    board={
      Array [
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
        Array [
          " ",
          " ",
          " ",
          " ",
          " ",
          " ",
        ],
      ]
    }
    currentTurn="B"
    isCompTurn="off"
    resetBoard={[MockFunction]}
    win={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        Array [
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={0}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={1}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={2}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={3}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={4}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={5}
            isCompTurn="off"
            win={false}
          />,
          <Column
            column={
              Array [
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
              ]
            }
            currentTurn="B"
            dataIndex={6}
            isCompTurn="off"
            win={false}
          />,
        ],
      ],
      "className": "bg-blue h-100 pa3 flex items-center justify-center board",
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 0,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 1,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 2,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 3,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 4,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "5",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 5,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "6",
        "nodeType": "class",
        "props": Object {
          "column": Array [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
          ],
          "currentTurn": "B",
          "dataIndex": 6,
          "handleClick": undefined,
          "isCompTurn": "off",
          "win": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          Array [
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={0}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={1}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={2}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={3}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={4}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={5}
              isCompTurn="off"
              win={false}
            />,
            <Column
              column={
                Array [
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                ]
              }
              currentTurn="B"
              dataIndex={6}
              isCompTurn="off"
              win={false}
            />,
          ],
        ],
        "className": "bg-blue h-100 pa3 flex items-center justify-center board",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 0,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 1,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 2,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 3,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 4,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 5,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "6",
          "nodeType": "class",
          "props": Object {
            "column": Array [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
            "currentTurn": "B",
            "dataIndex": 6,
            "handleClick": undefined,
            "isCompTurn": "off",
            "win": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
