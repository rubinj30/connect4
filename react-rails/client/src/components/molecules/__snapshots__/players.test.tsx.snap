// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Players should render properly when computer is playing and it is the computer's turn 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="y"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex justify-around w-100 items-center"
        >
          <CurrentPlayer
            color="black"
            isCompTurn="y"
            isFirst={true}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              }
            }
          />
          <CurrentPlayer
            color="red"
            isCompTurn="y"
            isFirst={false}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              }
            }
          />
        </div>,
        <div
          className="w-100 flex justify-around"
        >
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
        </div>,
        <Button
          className="w5"
          label="Create New Player"
          onClick={[Function]}
        />,
        false,
      ],
      "className": "flex flex-column items-center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CurrentPlayer
              color="black"
              isCompTurn="y"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />,
            <CurrentPlayer
              color="red"
              isCompTurn="y"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />,
          ],
          "className": "flex justify-around w-100 items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "black",
              "isCompTurn": "y",
              "isFirst": true,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "red",
              "isCompTurn": "y",
              "isFirst": false,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
          ],
          "className": "w-100 flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "w5",
          "label": "Create New Player",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex justify-around w-100 items-center"
          >
            <CurrentPlayer
              color="black"
              isCompTurn="y"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />
            <CurrentPlayer
              color="red"
              isCompTurn="y"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />
          </div>,
          <div
            className="w-100 flex justify-around"
          >
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
          </div>,
          <Button
            className="w5"
            label="Create New Player"
            onClick={[Function]}
          />,
          false,
        ],
        "className": "flex flex-column items-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CurrentPlayer
                color="black"
                isCompTurn="y"
                isFirst={true}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  }
                }
              />,
              <CurrentPlayer
                color="red"
                isCompTurn="y"
                isFirst={false}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 2",
                    "wins": 0,
                  }
                }
              />,
            ],
            "className": "flex justify-around w-100 items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "black",
                "isCompTurn": "y",
                "isFirst": true,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "red",
                "isCompTurn": "y",
                "isFirst": false,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
            ],
            "className": "w-100 flex justify-around",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "w5",
            "label": "Create New Player",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Players should render properly when computer is playing but its not its turn 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="n"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex justify-around w-100 items-center"
        >
          <CurrentPlayer
            color="black"
            isCompTurn="n"
            isFirst={true}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              }
            }
          />
          <CurrentPlayer
            color="red"
            isCompTurn="n"
            isFirst={false}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              }
            }
          />
        </div>,
        <div
          className="w-100 flex justify-around"
        >
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
        </div>,
        <Button
          className="w5"
          label="Create New Player"
          onClick={[Function]}
        />,
        false,
      ],
      "className": "flex flex-column items-center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CurrentPlayer
              color="black"
              isCompTurn="n"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />,
            <CurrentPlayer
              color="red"
              isCompTurn="n"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />,
          ],
          "className": "flex justify-around w-100 items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "black",
              "isCompTurn": "n",
              "isFirst": true,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "red",
              "isCompTurn": "n",
              "isFirst": false,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
          ],
          "className": "w-100 flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "w5",
          "label": "Create New Player",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex justify-around w-100 items-center"
          >
            <CurrentPlayer
              color="black"
              isCompTurn="n"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />
            <CurrentPlayer
              color="red"
              isCompTurn="n"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />
          </div>,
          <div
            className="w-100 flex justify-around"
          >
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
          </div>,
          <Button
            className="w5"
            label="Create New Player"
            onClick={[Function]}
          />,
          false,
        ],
        "className": "flex flex-column items-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CurrentPlayer
                color="black"
                isCompTurn="n"
                isFirst={true}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  }
                }
              />,
              <CurrentPlayer
                color="red"
                isCompTurn="n"
                isFirst={false}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 2",
                    "wins": 0,
                  }
                }
              />,
            ],
            "className": "flex justify-around w-100 items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "black",
                "isCompTurn": "n",
                "isFirst": true,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "red",
                "isCompTurn": "n",
                "isFirst": false,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
            ],
            "className": "w-100 flex justify-around",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "w5",
            "label": "Create New Player",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Players should render properly when the two players are playing and computer is off 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="off"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex justify-around w-100 items-center"
        >
          <CurrentPlayer
            color="black"
            isCompTurn="off"
            isFirst={true}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              }
            }
          />
          <CurrentPlayer
            color="red"
            isCompTurn="off"
            isFirst={false}
            player={
              Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              }
            }
          />
        </div>,
        <div
          className="w-100 flex justify-around"
        >
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
          <PlayerSelect
            players={
              Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ]
            }
            updateDropdown={[Function]}
          />
        </div>,
        <Button
          className="w5"
          label="Create New Player"
          onClick={[Function]}
        />,
        false,
      ],
      "className": "flex flex-column items-center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CurrentPlayer
              color="black"
              isCompTurn="off"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />,
            <CurrentPlayer
              color="red"
              isCompTurn="off"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />,
          ],
          "className": "flex justify-around w-100 items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "black",
              "isCompTurn": "off",
              "isFirst": true,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 1",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "red",
              "isCompTurn": "off",
              "isFirst": false,
              "player": Object {
                "id": 0,
                "losses": 0,
                "name": "Player 2",
                "wins": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />,
          ],
          "className": "w-100 flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "players": Array [
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              ],
              "updateDropdown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "w5",
          "label": "Create New Player",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex justify-around w-100 items-center"
          >
            <CurrentPlayer
              color="black"
              isCompTurn="off"
              isFirst={true}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                }
              }
            />
            <CurrentPlayer
              color="red"
              isCompTurn="off"
              isFirst={false}
              player={
                Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                }
              }
            />
          </div>,
          <div
            className="w-100 flex justify-around"
          >
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
            <PlayerSelect
              players={
                Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ]
              }
              updateDropdown={[Function]}
            />
          </div>,
          <Button
            className="w5"
            label="Create New Player"
            onClick={[Function]}
          />,
          false,
        ],
        "className": "flex flex-column items-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CurrentPlayer
                color="black"
                isCompTurn="off"
                isFirst={true}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  }
                }
              />,
              <CurrentPlayer
                color="red"
                isCompTurn="off"
                isFirst={false}
                player={
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 2",
                    "wins": 0,
                  }
                }
              />,
            ],
            "className": "flex justify-around w-100 items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "black",
                "isCompTurn": "off",
                "isFirst": true,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 1",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "red",
                "isCompTurn": "off",
                "isFirst": false,
                "player": Object {
                  "id": 0,
                  "losses": 0,
                  "name": "Player 2",
                  "wins": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
              <PlayerSelect
                players={
                  Array [
                    Object {
                      "id": 0,
                      "losses": 0,
                      "name": "Player 1",
                      "wins": 0,
                    },
                  ]
                }
                updateDropdown={[Function]}
              />,
            ],
            "className": "w-100 flex justify-around",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "players": Array [
                  Object {
                    "id": 0,
                    "losses": 0,
                    "name": "Player 1",
                    "wins": 0,
                  },
                ],
                "updateDropdown": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "w5",
            "label": "Create New Player",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
