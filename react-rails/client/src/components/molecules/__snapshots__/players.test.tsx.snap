// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Players should render properly when computer is playing and it is the computer's turn 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="y"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex justify-around"
      >
        <div
          className="name bg-black ma2 pa2 white border"
        >
          player 1
        </div>
        <div
          className="name bg-red ma2 pa2 white  b f5"
        >
          COMPUTER
        </div>
      </div>,
      "className": "flex flex-column",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>,
          <div
            className="name bg-red ma2 pa2 white  b f5"
          >
            COMPUTER
          </div>,
        ],
        "className": "flex justify-around",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "player 1",
            "className": "name bg-black ma2 pa2 white border",
          },
          "ref": null,
          "rendered": "player 1",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "COMPUTER",
            "className": "name bg-red ma2 pa2 white  b f5",
          },
          "ref": null,
          "rendered": "COMPUTER",
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex justify-around"
        >
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>
          <div
            className="name bg-red ma2 pa2 white  b f5"
          >
            COMPUTER
          </div>
        </div>,
        "className": "flex flex-column",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="name bg-black ma2 pa2 white border"
            >
              player 1
            </div>,
            <div
              className="name bg-red ma2 pa2 white  b f5"
            >
              COMPUTER
            </div>,
          ],
          "className": "flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "player 1",
              "className": "name bg-black ma2 pa2 white border",
            },
            "ref": null,
            "rendered": "player 1",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "COMPUTER",
              "className": "name bg-red ma2 pa2 white  b f5",
            },
            "ref": null,
            "rendered": "COMPUTER",
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Players should render properly when computer is playing but its not its turn 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="n"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex justify-around"
      >
        <div
          className="name bg-black ma2 pa2 white border"
        >
          player 1
        </div>
        <div
          className="name bg-red ma2 pa2 white  b f5"
        >
          COMPUTER
        </div>
      </div>,
      "className": "flex flex-column",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>,
          <div
            className="name bg-red ma2 pa2 white  b f5"
          >
            COMPUTER
          </div>,
        ],
        "className": "flex justify-around",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "player 1",
            "className": "name bg-black ma2 pa2 white border",
          },
          "ref": null,
          "rendered": "player 1",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "COMPUTER",
            "className": "name bg-red ma2 pa2 white  b f5",
          },
          "ref": null,
          "rendered": "COMPUTER",
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex justify-around"
        >
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>
          <div
            className="name bg-red ma2 pa2 white  b f5"
          >
            COMPUTER
          </div>
        </div>,
        "className": "flex flex-column",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="name bg-black ma2 pa2 white border"
            >
              player 1
            </div>,
            <div
              className="name bg-red ma2 pa2 white  b f5"
            >
              COMPUTER
            </div>,
          ],
          "className": "flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "player 1",
              "className": "name bg-black ma2 pa2 white border",
            },
            "ref": null,
            "rendered": "player 1",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "COMPUTER",
              "className": "name bg-red ma2 pa2 white  b f5",
            },
            "ref": null,
            "rendered": "COMPUTER",
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Players should render properly when the two players are playing and computer is off 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Players
    currentTurn="B"
    isCompTurn="off"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex justify-around"
      >
        <div
          className="name bg-black ma2 pa2 white border"
        >
          player 1
        </div>
        <div
          className="name bg-red ma2 pa2 white  "
        >
          player 2
        </div>
      </div>,
      "className": "flex flex-column",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>,
          <div
            className="name bg-red ma2 pa2 white  "
          >
            player 2
          </div>,
        ],
        "className": "flex justify-around",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "player 1",
            "className": "name bg-black ma2 pa2 white border",
          },
          "ref": null,
          "rendered": "player 1",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "player 2",
            "className": "name bg-red ma2 pa2 white  ",
          },
          "ref": null,
          "rendered": "player 2",
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex justify-around"
        >
          <div
            className="name bg-black ma2 pa2 white border"
          >
            player 1
          </div>
          <div
            className="name bg-red ma2 pa2 white  "
          >
            player 2
          </div>
        </div>,
        "className": "flex flex-column",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="name bg-black ma2 pa2 white border"
            >
              player 1
            </div>,
            <div
              className="name bg-red ma2 pa2 white  "
            >
              player 2
            </div>,
          ],
          "className": "flex justify-around",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "player 1",
              "className": "name bg-black ma2 pa2 white border",
            },
            "ref": null,
            "rendered": "player 1",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "player 2",
              "className": "name bg-red ma2 pa2 white  ",
            },
            "ref": null,
            "rendered": "player 2",
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
