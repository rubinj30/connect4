// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumPlayers should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NumPlayers
    changeCompTurn={[MockFunction]}
    isCompTurn="n"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="pr1"
        >
          Is computer on?
        </span>,
        <span
          className="pa2 ba b--blue option "
        >
          No
        </span>,
        <span
          className="pa2 ba option bg-blue white bw2 b--red"
        >
          Yes
        </span>,
      ],
      "className": "br2",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Is computer on?",
          "className": "pr1",
        },
        "ref": null,
        "rendered": "Is computer on?",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No",
          "className": "pa2 ba b--blue option ",
        },
        "ref": null,
        "rendered": "No",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Yes",
          "className": "pa2 ba option bg-blue white bw2 b--red",
        },
        "ref": null,
        "rendered": "Yes",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="pr1"
          >
            Is computer on?
          </span>,
          <span
            className="pa2 ba b--blue option "
          >
            No
          </span>,
          <span
            className="pa2 ba option bg-blue white bw2 b--red"
          >
            Yes
          </span>,
        ],
        "className": "br2",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Is computer on?",
            "className": "pr1",
          },
          "ref": null,
          "rendered": "Is computer on?",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No",
            "className": "pa2 ba b--blue option ",
          },
          "ref": null,
          "rendered": "No",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Yes",
            "className": "pa2 ba option bg-blue white bw2 b--red",
          },
          "ref": null,
          "rendered": "Yes",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
